{
	"name": "react-ssr-boilerplate",
	"version": "1.0.0",
	"main": "main.js",
	"description": "Webpack React SSR - Boilerplate",
	"repository": "https://github.com/luangjokaj/react-ssr-boilerplate",
	"license": "MIT",
	"dependencies": {
		"accepts": "^1.3.5",
		"ajv": "^6.5.2",
		"aws-serverless-express": "^3.2.0",
		"babel-cli": "^6.26.0",
		"babel-core": "^6.26.3",
		"babel-loader": "^7.1.5",
		"babel-plugin-syntax-dynamic-import": "^6.18.0",
		"babel-plugin-transform-class-properties": "^6.24.1",
		"babel-plugin-transform-es2015-arrow-functions": "^6.22.0",
		"babel-plugin-transform-regenerator": "^6.26.0",
		"babel-plugin-transform-runtime": "^6.23.0",
		"babel-plugin-universal-import": "^3.0.0",
		"babel-polyfill": "^6.26.0",
		"babel-preset-env": "^1.7.0",
		"babel-preset-react": "^6.24.1",
		"iltorb": "^2.3.2",
		"brotli-webpack-plugin": "^1.0.0",
		"classnames": "^2.2.6",
		"compression-webpack-plugin": "^1.1.11",
		"cookie-parser": "^1.4.3",
		"css-loader": "^1.0.0",
		"css-modules": "^0.3.0",
		"cssnano": "^4.0.0",
		"ejs-loader": "^0.3.1",
		"express": "^4.16.3",
		"express-static-gzip": "^0.3.2",
		"extract-css-chunks-webpack-plugin": "^3.0.6",
		"extract-loader": "^2.0.1",
		"file-loader": "^1.1.11",
		"html-loader": "^0.5.5",
		"html-webpack-plugin": "^3.2.0",
		"import": "0.0.6",
		"markdown-with-front-matter-loader": "^0.1.0",
		"mini-css-extract-plugin": "^0.4.1",
		"normalize.css": "^8.0.0",
		"optimize-css-assets-webpack-plugin": "^4.0.3",
		"postcss-cssnext": "^3.1.0",
		"postcss-flexbugs-fixes": "^3.3.1",
		"postcss-import": "^11.1.0",
		"postcss-loader": "^2.1.5",
		"react": "^16.4.1",
		"react-dom": "^16.4.1",
		"react-helmet": "^5.2.0",
		"react-hot-loader": "^4.3.3",
		"react-router": "^4.3.1",
		"react-router-dom": "^4.3.1",
		"react-universal-component": "^2.9.0",
		"style-loader": "^0.21.0",
		"uglifyjs-webpack-plugin": "^1.2.7",
		"url-loader": "1.0.1",
		"webpack": "^4.15.1",
		"webpack-bundle-analyzer": "^2.13.1",
		"webpack-cli": "^3.0.8",
		"webpack-dev-middleware": "3.1.3",
		"webpack-dev-server": "^3.1.4",
		"webpack-flush-chunks": "^2.0.1",
		"webpack-hot-middleware": "2.22.2",
		"webpack-hot-server-middleware": "^0.5.0",
		"webpack-node-externals": "^1.7.2"
	},
	"config": {
		"s3BucketName": "react-ssr-lambda-test2",
		"region": "eu-west-1",
		"cloudFormationStackName": "AwsServerlessExpressStack",
		"functionName": "AwsServerlessExpressFunction",
		"accountId": "195637743243"
	  },
	  "scripts": {
		"start": "NODE_ENV=production node src/server/main.js",
		"dev": "NODE_ENV=development nodemon --watch src/server --watch config --inspect src/server/main.js",
		"build_deleteme": "rm -f lambda.zip && echo \"zipping project...\"  && cd src && zip -rq ../lambda.zip ../node_modules * && cd ..",
		"config": "node ./scripts/configure.js",
		"deconfig": "node ./scripts/deconfigure.js",
		"local": "node scripts/local",
		"invoke-lambda": "aws lambda invoke --function-name $npm_package_config_functionName --region $npm_package_config_region --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
		"create-bucket": "aws s3 mb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
		"delete-bucket": "aws s3 rb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
		"package": "aws cloudformation package --template ./template.yaml --s3-bucket $npm_package_config_s3BucketName --output-template packaged.yaml --region $npm_package_config_region",
		"deploy": "aws cloudformation deploy --template-file packaged.yaml --stack-name $npm_package_config_cloudFormationStackName --capabilities CAPABILITY_IAM --region $npm_package_config_region",
		"package-deploy": "npm run package && npm run deploy",
		"delete-stack": "aws cloudformation delete-stack --stack-name $npm_package_config_cloudFormationStackName --region $npm_package_config_region",
		"setup": "npm install && (aws s3api get-bucket-location --bucket $npm_package_config_s3BucketName --region $npm_package_config_region || npm run create-bucket) && npm run package-deploy",
		"win-config": "npm run config",
		"win-deconfig": "npm run deconfig",
		"win-local": "npm run local",
		"win-invoke-lambda": "aws lambda invoke --function-name %npm_package_config_functionName% --region %npm_package_config_region% --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
		"win-create-bucket": "aws s3 mb s3://%npm_package_config_s3BucketName% --region %npm_package_config_region%",
		"win-delete-bucket": "aws s3 rb s3://%npm_package_config_s3BucketName% --region %npm_package_config_region%",
		"win-package": "aws cloudformation package --template ./template.yaml --s3-bucket %npm_package_config_s3BucketName% --output-template packaged.yaml --region %npm_package_config_region%",
		"win-deploy": "aws cloudformation deploy --template-file packaged.yaml --stack-name %npm_package_config_cloudFormationStackName% --capabilities CAPABILITY_IAM --region %npm_package_config_region%",
		"win-package-deploy": "npm run win-package && npm run win-deploy",
		"win-delete-stack": "aws cloudformation delete-stack --stack-name %npm_package_config_cloudFormationStackName% --region %npm_package_config_region%",
		"win-setup": "npm install && (aws s3api get-bucket-location --bucket %npm_package_config_s3BucketName% --region %npm_package_config_region% || npm run win-create-bucket) && npm run win-package-deploy"
	}
}
